{"version":3,"sources":["components/test-one.js","components/test-two.js","App.js","reportWebVitals.js","index.js"],"names":["TestOne","Button","variant","color","TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","Box","sx","p","a11yProps","fabStyle","position","bottom","right","fabGreenStyle","bgcolor","green","TestTwo","theme","useTheme","React","setValue","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","fabs","icon","label","width","minHeight","AppBar","Tabs","onChange","event","newValue","indicatorColor","textColor","Tab","axis","direction","onChangeIndex","dir","map","fab","Zoom","in","timeout","style","transitionDelay","unmountOnExit","Fab","createTheme","shape","borderRadius","palette","secondary","light","main","neutral","contrastText","App","ThemeProvider","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd3e5934.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst TestOne = () =>{\r\n    return(\r\n        <>\r\n        <h3>test1</h3>\r\n        <Button variant=\"contained\" color=\"secondary\">Hello World</Button>\r\n        </>\r\n    )\r\n}\r\nexport default TestOne;","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Fab from '@mui/material/Fab';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport UpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport { green } from '@mui/material/colors';\r\nimport Box from '@mui/material/Box';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`action-tabpanel-${index}`}\r\n      aria-labelledby={`action-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `action-tab-${index}`,\r\n    'aria-controls': `action-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst fabStyle = {\r\n  position: 'absolute',\r\n  bottom: 16,\r\n  right: 16,\r\n};\r\n\r\nconst fabGreenStyle = {\r\n  color: 'common.white',\r\n  bgcolor: green[500],\r\n  '&:hover': {\r\n    bgcolor: green[600],\r\n  },\r\n};\r\n\r\nconst TestTwo = () => {\r\n  const theme = useTheme();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleChangeIndex = (index) => {\r\n    setValue(index);\r\n  };\r\n\r\n  const transitionDuration = {\r\n    enter: theme.transitions.duration.enteringScreen,\r\n    exit: theme.transitions.duration.leavingScreen,\r\n  };\r\n\r\n  const fabs = [\r\n    {\r\n      color: 'primary',\r\n      sx: fabStyle,\r\n      icon: <AddIcon />,\r\n      label: 'Add',\r\n    },\r\n    {\r\n      color: 'secondary',\r\n      sx: fabStyle,\r\n      icon: <EditIcon />,\r\n      label: 'Edit',\r\n    },\r\n    {\r\n      color: 'inherit',\r\n      sx: { ...fabStyle, ...fabGreenStyle },\r\n      icon: <UpIcon />,\r\n      label: 'Expand',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        bgcolor: 'background.paper',\r\n        width: 500,\r\n        position: 'relative',\r\n        minHeight: 200,\r\n      }}\r\n    >\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"action tabs example\"\r\n        >\r\n          <Tab label=\"Item One\" {...a11yProps(0)} />\r\n          <Tab label=\"Item Two\" {...a11yProps(1)} />\r\n          <Tab label=\"Item Three\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <SwipeableViews\r\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n        index={value}\r\n        onChangeIndex={handleChangeIndex}\r\n      >\r\n        <TabPanel value={value} index={0} dir={theme.direction}>\r\n          Item One\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1} dir={theme.direction}>\r\n          Item Two\r\n        </TabPanel>\r\n        <TabPanel value={value} index={2} dir={theme.direction}>\r\n          Item Three\r\n        </TabPanel>\r\n      </SwipeableViews>\r\n      {fabs.map((fab, index) => (\r\n        <Zoom\r\n          key={fab.color}\r\n          in={value === index}\r\n          timeout={transitionDuration}\r\n          style={{\r\n            transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\r\n          }}\r\n          unmountOnExit\r\n        >\r\n          <Fab sx={fab.sx} aria-label={fab.label} color={fab.color}>\r\n            {fab.icon}\r\n          </Fab>\r\n        </Zoom>\r\n      ))}\r\n    </Box>\r\n  );\r\n}\r\nexport default TestTwo;\r\n","\nimport './App.css';\nimport TestOne from './components/test-one';\nimport TestTwo from './components/test-two';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n  shape: {\n    borderRadius: 4,\n  },\n  palette: {\n      secondary: {\n        light: \"#ffbd9d\",\n        main: '#bbffb3',\n      },\n      neutral: {\n        main: '#000',\n        contrastText: '#fff'\n      }\n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n        <TestOne/>\n        <TestTwo/>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}